@model CmsCore.Admin.Models.PostViewModel

@{
    ViewData["Title"] = "Edit Post: " + Model.Title;
}
<link href="@(ViewBag.AssetsUrl)/global/plugins/jstree/dist/themes/default/style.min.css" rel="stylesheet" type="text/css">
<script src="//cdn.ckeditor.com/4.6.2/standard/ckeditor.js"></script>
<script src="~/js/generate-slug.js"></script>

<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a asp-controller="Post" asp-action="Index">Posts</a>
            <i class="fa fa-circle"></i>
        </li>
        <li>
            <span>Yazıyı Düzenle</span>
        </li>
    </ul>
    <div class="page-toolbar">
    </div>
</div>
<br />
<!-- END PAGE BAR -->
<!-- BEGIN PAGE TITLE-->
<h1 class="page-title">
    <small></small>
</h1>
<div class="row">
    <div class="col-md-6 ">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class="portlet light bordered" style="width: 1000px;">
            <div class="portlet-title">
                <div class="caption font-dark">
                    <i class="icon-settings font-black-sunglo"></i>
                    <span class="caption-subject bold uppercase">
                        YAZIYI DÜZENLE
                    </span>
                </div>

            </div>

            <div>
                <form asp-action="Edit" asp-controller="Post" method="post">
                    <div class="portlet-body form">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.AddedDate)
                                    @Html.HiddenFor(model => model.AddedBy)
                                    @Html.HiddenFor(model => model.ModifiedDate)
                                    @Html.HiddenFor(model => model.ModifiedBy)
                                </div>
                            </div>
                            <div class="form-group">
                                <div id="tree">

                                </div>
                            </div>
                            @Html.HiddenFor(model => model.categoriesHidden)
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title)
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @tabindex = "1", @class = "form-control", @onblur = "if ($('#Slug').val() == '') {$('#Slug').val(slug($('#Title').val().toLowerCase(),'-'));}" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Slug)
                                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @tabindex = "2", @class = "form-control", @onblur = "if ($('#Slug').val() == '') {$('#Slug').val(slug($('#Title').val().toLowerCase(),'-'));}" } })
                                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Photo)
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Photo, new { @class = "form-control" })
                                    <span class="input-group-btn">
                                        <button class="btn btn-info" id="uploadModal" type="button">...</button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <br>
                                @Html.LabelFor(model => model.Body)
                                @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @tabindex = "3", @cols = "80", @rows = "10" } })
                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                <script>
                                    CKEDITOR.replace('Body');
                                </script>
                                <div id="content2" style="display: none" data-sample="2">
                                    <p>The number of<code>change</code>events:<strong><span id="changes"></span></strong></p>
                                    <h3>Mirrored Content</h3>
                                    <!-- This <div>
                                    will be used to display the editor content.-->
                                    <div id="editorcontent2">
                                    </div>
                                </div>
                            </div>
                            @*<div class="form-group">
                                    <label asp-for="Description"></label>
                                    <p>
                                        <textarea asp-for="Description" tabindex="3"></textarea>
                                        <span class="text-danger" asp-validation-for="Description"></span>
                                        <script type="text/javascript">
                                            CKEDITOR.replace('Description');
                                        </script>
                                    </p>
                                </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description)
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Meta1)
                                @Html.EditorFor(model => model.Meta1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Meta1, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Meta2)
                                @Html.EditorFor(model => model.Meta2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Meta2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="portlet light bordered">
                            <div class="portlet-body form">
                                <fieldset>
                                    <legend>SEO Özellikleri</legend>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SeoTitle)
                                        @Html.EditorFor(model => model.SeoTitle, new { htmlAttributes = new { @tabindex = "7", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SeoDescription)<br />
                                        @Html.TextAreaFor(model => model.SeoDescription, new { @tabindex = "8", @class = "form-control spinner", @width = "auto" })
                                        @Html.ValidationMessageFor(model => model.SeoDescription, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SeoKeywords)<br />
                                        @Html.TextAreaFor(model => model.SeoKeywords, new { @tabindex = "9", @class = "form-control spinner" })
                                        @Html.ValidationMessageFor(model => model.SeoKeywords, "", new { @class = "text-danger" })
                                    </div>
                                </fieldset>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <input type="checkbox" asp-for="IsPublished" tabindex="10" /> Is Published
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <button type="submit" tabindex="11" class="btn blue">
                                Save
                            </button>
                            <a type="button" tabindex="12" class="btn default" asp-controller="Post" asp-action="Index">
                                Cancel
                            </a>

                        </div>

                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Cancel"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Dosya Yükle</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal" style="display:none;" id="browseSave">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script src="@(ViewBag.AssetsUrl)global/plugins/jstree/dist/jstree.js"></script>
    <script>
        $(function () {
            $("#uploadModal").click(function () {
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "/Media/Create",
                    success: function (view) {
                        $('.modal-body').html(view);
                        $('.modal').modal();
                    },
                    error: function (err) {
                        alert("bilinmeyen bir hata oluştu!" + err);
                    }
                });
            });
        });
    </script>
    <script>
        var handleSample = function () {
            $('#tree').jstree({
                'plugins': ["wholerow", "checkbox"],
                'core': {
                    "themes": {
                        "responsive": false,
                        "icons": false
                    },
                    'data': [

                            @foreach(PostCategory item in (IEnumerable<PostCategory>)ViewBag.CategoryList)
                {

                    if(item.ParentCategoryId==null)
                    {
                        <text>
                        {
                            "id": '@item.Id', "parent": "#", "text": "@item.Name", "state": {
                                @foreach (var dist in (IEnumerable<PostPostCategory>)ViewBag.CheckList)
                                    {
                                        if (item.Id == dist.PostCategoryId)
                                        {
                                            <text>
                                                selected: true
                                            </text>
                                        }
                                    }
                            }
                        },
                        </text>
                                }
                                else
                                {
                        <text>
                        { "id": '@item.Id', "parent": "@item.ParentCategoryId", "text": "@item.Name","state": {
                                @foreach (var dist in (IEnumerable<PostPostCategory>)ViewBag.CheckList)
                                    {
                                        if (item.Id == dist.PostCategoryId)
                                        {
                                            <text>
                                                selected: true
                                            </text>
                                        }
                                    }
                                }
                        },
                        </text>
                    }
                }
                    ]

                }
            });
        }
        handleSample();
    </script>
    <script>
        $(function () {
            // 6 create an instance when the DOM is ready
            $('#tree').jstree();
            // 7 bind to events triggered on the tree
            $('#tree').on("changed.jstree", function (e, data) {
                console.log(data.selected);
                $('#categoriesHidden').val(data.selected);
            });
            // 8 interact with the tree - either way is OK
            $('button').on('click', function () {
                $('#tree').jstree(true).select_node('child_node_1');
                $('#tree').jstree('select_node', 'child_node_1');
                $.jstree.reference('#tree').select_node('child_node_1');
            });
        });
    </script>
}